{"ast":null,"code":"var _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { Menu } from \"antd\";\nimport Link from \"next/link\";\nimport { useRouter } from 'next/router';\nimport CustomScrollbars from \"../../../util/CustomScrollbars\";\nimport SidebarLogo from \"./SidebarLogo\";\nimport UserProfile from \"./UserProfile\";\nimport AppsNavigation from \"./AppsNavigation\";\nimport { NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR, NAV_STYLE_NO_HEADER_MINI_SIDEBAR, THEME_TYPE_LITE } from \"../../../constants/ThemeSetting\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPathName } from \"../../../redux/actions\";\nvar SubMenu = Menu.SubMenu;\nvar MenuItemGroup = Menu.ItemGroup;\nvar SidebarContent = function SidebarContent() {\n  _s();\n  var navStyle = useSelector(function (_ref) {\n    var settings = _ref.settings;\n    return settings.navStyle;\n  });\n  var themeType = useSelector(function (_ref2) {\n    var settings = _ref2.settings;\n    return settings.themeType;\n  });\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var getNoHeaderClass = function getNoHeaderClass(navStyle) {\n    if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR || navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) {\n      return \"gx-no-header-notifications\";\n    }\n    return \"\";\n  };\n  var getNavStyleSubMenuClass = function getNavStyleSubMenuClass(navStyle) {\n    if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR) {\n      return \"gx-no-header-submenu-popup\";\n    }\n    return \"\";\n  };\n  useEffect(function () {\n    dispatch(setPathName(router.pathname));\n  }, [router.pathname]);\n  var selectedKeys = router.pathname.substr(1) || 'sample';\n  var defaultOpenKeys = selectedKeys.split('/')[1];\n  return __jsx(React.Fragment, null, __jsx(SidebarLogo, null), __jsx(\"div\", {\n    className: \"gx-sidebar-content\"\n  }, __jsx(\"div\", {\n    className: \"gx-sidebar-notifications \".concat(getNoHeaderClass(navStyle))\n  }, __jsx(UserProfile, null), __jsx(AppsNavigation, null)), __jsx(CustomScrollbars, {\n    className: \"gx-layout-sider-scrollbar\"\n  }, __jsx(Menu, {\n    defaultOpenKeys: [defaultOpenKeys],\n    selectedKeys: [selectedKeys],\n    theme: themeType === THEME_TYPE_LITE ? 'lite' : 'dark',\n    mode: \"inline\"\n  }, __jsx(Menu.Item, {\n    key: \"sample\"\n  }, __jsx(Link, {\n    href: \"/sample\"\n  }, __jsx(\"a\", null, __jsx(\"i\", {\n    className: \"icon icon-dasbhoard\"\n  }), __jsx(\"span\", null, \"Sample\")))), __jsx(Menu.Item, {\n    key: \"user\"\n  }, __jsx(Link, {\n    href: \"/usermanage\"\n  }, __jsx(\"a\", null, __jsx(\"i\", {\n    className: \"icon icon-dasbhoard\"\n  }), __jsx(\"span\", null, \"User Manage\"))))))));\n};\n_s(SidebarContent, \"EatSLtibr+03jiOQpQSLf177G7o=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useRouter];\n});\n_c = SidebarContent;\nSidebarContent.propTypes = {};\nexport default SidebarContent;\nvar _c;\n$RefreshReg$(_c, \"SidebarContent\");","map":{"version":3,"names":["React","useEffect","Menu","Link","useRouter","CustomScrollbars","SidebarLogo","UserProfile","AppsNavigation","NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR","NAV_STYLE_NO_HEADER_MINI_SIDEBAR","THEME_TYPE_LITE","useDispatch","useSelector","setPathName","SubMenu","MenuItemGroup","ItemGroup","SidebarContent","_s","navStyle","_ref","settings","themeType","_ref2","dispatch","router","getNoHeaderClass","getNavStyleSubMenuClass","pathname","selectedKeys","substr","defaultOpenKeys","split","__jsx","Fragment","className","concat","theme","mode","Item","key","href","_c","propTypes","$RefreshReg$"],"sources":["/home/novel/Desktop/medcario/lms/lms_admin/db-sl-admin/app/core/Sidebar/SidebarContent.js"],"sourcesContent":["import React, {useEffect} from \"react\";\nimport {Menu} from \"antd\";\nimport Link from \"next/link\";\n\nimport {useRouter} from 'next/router'\nimport CustomScrollbars from \"../../../util/CustomScrollbars\";\nimport SidebarLogo from \"./SidebarLogo\";\nimport UserProfile from \"./UserProfile\";\nimport AppsNavigation from \"./AppsNavigation\";\nimport {\n  NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR,\n  NAV_STYLE_NO_HEADER_MINI_SIDEBAR,\n  THEME_TYPE_LITE\n} from \"../../../constants/ThemeSetting\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setPathName} from \"../../../redux/actions\";\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nconst SidebarContent = () => {\n  const navStyle = useSelector(({settings}) => settings.navStyle);\n  const themeType = useSelector(({settings}) => settings.themeType);\n\n  const dispatch = useDispatch();\n  const router = useRouter()\n\n  const getNoHeaderClass = (navStyle) => {\n    if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR || navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) {\n      return \"gx-no-header-notifications\";\n    }\n    return \"\";\n  };\n\n  const getNavStyleSubMenuClass = (navStyle) => {\n    if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR) {\n      return \"gx-no-header-submenu-popup\";\n    }\n    return \"\";\n  };\n\n  useEffect(() => {\n    dispatch(setPathName(router.pathname))\n  }, [router.pathname]);\n\n  const selectedKeys = router.pathname.substr(1) || 'sample';\n  const defaultOpenKeys = selectedKeys.split('/')[1];\n\n  return (\n    <React.Fragment>\n      <SidebarLogo/>\n      <div className=\"gx-sidebar-content\">\n        <div className={`gx-sidebar-notifications ${getNoHeaderClass(navStyle)}`}>\n          <UserProfile/>\n          <AppsNavigation/>\n        </div>\n        <CustomScrollbars className=\"gx-layout-sider-scrollbar\">\n          <Menu\n            defaultOpenKeys={[defaultOpenKeys]}\n            selectedKeys={[selectedKeys]}\n            theme={themeType === THEME_TYPE_LITE ? 'lite' : 'dark'}\n            mode=\"inline\">\n\n            <Menu.Item key=\"sample\">\n              <Link href=\"/sample\">\n                <a><i className=\"icon icon-dasbhoard\"/><span>Sample</span></a>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"user\">\n              <Link href=\"/usermanage\">\n                <a><i className=\"icon icon-dasbhoard\"/><span>User Manage</span></a>\n              </Link>\n            </Menu.Item>\n          </Menu>\n        </CustomScrollbars>\n      </div>\n    </React.Fragment>\n  );\n};\n\nSidebarContent.propTypes = {};\nexport default SidebarContent;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAAQC,IAAI,QAAO,MAAM;AACzB,OAAOC,IAAI,MAAM,WAAW;AAE5B,SAAQC,SAAS,QAAO,aAAa;AACrC,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SACEC,oCAAoC,EACpCC,gCAAgC,EAChCC,eAAe,QACV,iCAAiC;AACxC,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAAQC,WAAW,QAAO,wBAAwB;AAElD,IAAMC,OAAO,GAAGb,IAAI,CAACa,OAAO;AAC5B,IAAMC,aAAa,GAAGd,IAAI,CAACe,SAAS;AAEpC,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAAAC,EAAA;EAC3B,IAAMC,QAAQ,GAAGP,WAAW,CAAC,UAAAQ,IAAA;IAAA,IAAEC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAA,OAAMA,QAAQ,CAACF,QAAQ;EAAA,EAAC;EAC/D,IAAMG,SAAS,GAAGV,WAAW,CAAC,UAAAW,KAAA;IAAA,IAAEF,QAAQ,GAAAE,KAAA,CAARF,QAAQ;IAAA,OAAMA,QAAQ,CAACC,SAAS;EAAA,EAAC;EAEjE,IAAME,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,IAAMc,MAAM,GAAGtB,SAAS,CAAC,CAAC;EAE1B,IAAMuB,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIP,QAAQ,EAAK;IACrC,IAAIA,QAAQ,KAAKV,gCAAgC,IAAIU,QAAQ,KAAKX,oCAAoC,EAAE;MACtG,OAAO,4BAA4B;IACrC;IACA,OAAO,EAAE;EACX,CAAC;EAED,IAAMmB,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAIR,QAAQ,EAAK;IAC5C,IAAIA,QAAQ,KAAKV,gCAAgC,EAAE;MACjD,OAAO,4BAA4B;IACrC;IACA,OAAO,EAAE;EACX,CAAC;EAEDT,SAAS,CAAC,YAAM;IACdwB,QAAQ,CAACX,WAAW,CAACY,MAAM,CAACG,QAAQ,CAAC,CAAC;EACxC,CAAC,EAAE,CAACH,MAAM,CAACG,QAAQ,CAAC,CAAC;EAErB,IAAMC,YAAY,GAAGJ,MAAM,CAACG,QAAQ,CAACE,MAAM,CAAC,CAAC,CAAC,IAAI,QAAQ;EAC1D,IAAMC,eAAe,GAAGF,YAAY,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAElD,OACEC,KAAA,CAAClC,KAAK,CAACmC,QAAQ,QACbD,KAAA,CAAC5B,WAAW,MAAC,CAAC,EACd4B,KAAA;IAAKE,SAAS,EAAC;EAAoB,GACjCF,KAAA;IAAKE,SAAS,8BAAAC,MAAA,CAA8BV,gBAAgB,CAACP,QAAQ,CAAC;EAAG,GACvEc,KAAA,CAAC3B,WAAW,MAAC,CAAC,EACd2B,KAAA,CAAC1B,cAAc,MAAC,CACb,CAAC,EACN0B,KAAA,CAAC7B,gBAAgB;IAAC+B,SAAS,EAAC;EAA2B,GACrDF,KAAA,CAAChC,IAAI;IACH8B,eAAe,EAAE,CAACA,eAAe,CAAE;IACnCF,YAAY,EAAE,CAACA,YAAY,CAAE;IAC7BQ,KAAK,EAAEf,SAAS,KAAKZ,eAAe,GAAG,MAAM,GAAG,MAAO;IACvD4B,IAAI,EAAC;EAAQ,GAEbL,KAAA,CAAChC,IAAI,CAACsC,IAAI;IAACC,GAAG,EAAC;EAAQ,GACrBP,KAAA,CAAC/B,IAAI;IAACuC,IAAI,EAAC;EAAS,GAClBR,KAAA,YAAGA,KAAA;IAAGE,SAAS,EAAC;EAAqB,CAAC,CAAC,EAAAF,KAAA,eAAM,QAAY,CAAI,CACzD,CACG,CAAC,EACZA,KAAA,CAAChC,IAAI,CAACsC,IAAI;IAACC,GAAG,EAAC;EAAM,GACnBP,KAAA,CAAC/B,IAAI;IAACuC,IAAI,EAAC;EAAa,GACtBR,KAAA,YAAGA,KAAA;IAAGE,SAAS,EAAC;EAAqB,CAAC,CAAC,EAAAF,KAAA,eAAM,aAAiB,CAAI,CAC9D,CACG,CACP,CACU,CACf,CACS,CAAC;AAErB,CAAC;AAACf,EAAA,CA1DID,cAAc;EAAA,QACDL,WAAW,EACVA,WAAW,EAEZD,WAAW,EACbR,SAAS;AAAA;AAAAuC,EAAA,GALpBzB,cAAc;AA4DpBA,cAAc,CAAC0B,SAAS,GAAG,CAAC,CAAC;AAC7B,eAAe1B,cAAc;AAAC,IAAAyB,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module"}