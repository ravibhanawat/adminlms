{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nexports.__esModule = true;\nexports.noSSR = noSSR;\nexports[\"default\"] = dynamic;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _loadable = _interopRequireDefault(require(\"./loadable\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nvar isServerSide = false;\nfunction noSSR(LoadableInitializer, loadableOptions) {\n  // Removing webpack and modules means react-loadable won't try preloading\n  delete loadableOptions.webpack;\n  delete loadableOptions.modules; // This check is necessary to prevent react-loadable from initializing on the server\n  if (!isServerSide) {\n    return LoadableInitializer(loadableOptions);\n  }\n  var Loading = loadableOptions.loading; // This will only be rendered on the server side\n  return function () {\n    return /*#__PURE__*/_react[\"default\"].createElement(Loading, {\n      error: null,\n      isLoading: true,\n      pastDelay: false,\n      timedOut: false\n    });\n  };\n} // function dynamic<P = {}, O extends DynamicOptions>(options: O):\nfunction dynamic(dynamicOptions, options) {\n  var loadableFn = _loadable[\"default\"];\n  var loadableOptions = {\n    // A loading component is not required, so we default it\n    loading: function loading(_ref) {\n      var error = _ref.error,\n        isLoading = _ref.isLoading,\n        pastDelay = _ref.pastDelay;\n      if (!pastDelay) return null;\n      if (true) {\n        if (isLoading) {\n          return null;\n        }\n        if (error) {\n          return /*#__PURE__*/_react[\"default\"].createElement(\"p\", null, error.message, /*#__PURE__*/_react[\"default\"].createElement(\"br\", null), error.stack);\n        }\n      }\n      return null;\n    }\n  }; // Support for direct import(), eg: dynamic(import('../hello-world'))\n  // Note that this is only kept for the edge case where someone is passing in a promise as first argument\n  // The react-loadable babel plugin will turn dynamic(import('../hello-world')) into dynamic(() => import('../hello-world'))\n  // To make sure we don't execute the import without rendering first\n  if (dynamicOptions instanceof Promise) {\n    loadableOptions.loader = function () {\n      return dynamicOptions;\n    }; // Support for having import as a function, eg: dynamic(() => import('../hello-world'))\n  } else if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions; // Support for having first argument being options, eg: dynamic({loader: import('../hello-world')})\n  } else if (typeof dynamicOptions === 'object') {\n    loadableOptions = _objectSpread(_objectSpread({}, loadableOptions), dynamicOptions);\n  } // Support for passing options, eg: dynamic(import('../hello-world'), {loading: () => <p>Loading something</p>})\n  loadableOptions = _objectSpread(_objectSpread({}, loadableOptions), options);\n  if (typeof dynamicOptions === 'object' && !(dynamicOptions instanceof Promise)) {\n    // show deprecation warning for `modules` key in development\n    if (true) {\n      if (dynamicOptions.modules) {\n        console.warn('The modules option for next/dynamic has been deprecated. See here for more info https://err.sh/vercel/next.js/next-dynamic-modules');\n      }\n    } // Support for `render` when using a mapping, eg: `dynamic({ modules: () => {return {HelloWorld: import('../hello-world')}, render(props, loaded) {} } })\n    if (dynamicOptions.render) {\n      loadableOptions.render = function (loaded, props) {\n        return dynamicOptions.render(props, loaded);\n      };\n    } // Support for `modules` when using a mapping, eg: `dynamic({ modules: () => {return {HelloWorld: import('../hello-world')}, render(props, loaded) {} } })\n    if (dynamicOptions.modules) {\n      loadableFn = _loadable[\"default\"].Map;\n      var loadModules = {};\n      var modules = dynamicOptions.modules();\n      Object.keys(modules).forEach(function (key) {\n        var value = modules[key];\n        if (typeof value.then === 'function') {\n          loadModules[key] = function () {\n            return value.then(function (mod) {\n              return mod[\"default\"] || mod;\n            });\n          };\n          return;\n        }\n        loadModules[key] = value;\n      });\n      loadableOptions.loader = loadModules;\n    }\n  } // coming from build/babel/plugins/react-loadable-plugin.js\n  if (loadableOptions.loadableGenerated) {\n    loadableOptions = _objectSpread(_objectSpread({}, loadableOptions), loadableOptions.loadableGenerated);\n    delete loadableOptions.loadableGenerated;\n  } // support for disabling server side rendering, eg: dynamic(import('../hello-world'), {ssr: false})\n  if (typeof loadableOptions.ssr === 'boolean') {\n    if (!loadableOptions.ssr) {\n      delete loadableOptions.ssr;\n      return noSSR(loadableFn, loadableOptions);\n    }\n    delete loadableOptions.ssr;\n  }\n  return loadableFn(loadableOptions);\n}","map":{"version":3,"sources":["../../../next-server/lib/dynamic.tsx"],"names":["isServerSide","noSSR","LoadableInitializer","loadableOptions","webpack","modules","Loading","loading","dynamic","dynamicOptions","options","loadableFn","Loadable","error","isLoading","pastDelay","message","stack","Promise","loader","console","warn","render","loaded","props","Map","loadModules","Object","keys","forEach","key","value","then","mod","loadableGenerated","ssr"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Loadable from './loadable'\n\nconst isServerSide = typeof window === 'undefined'\n\nexport type LoaderComponent<P = {}> = Promise<\n  React.ComponentType<P> | { default: React.ComponentType<P> }\n>\n\nexport type Loader<P = {}> = (() => LoaderComponent<P>) | LoaderComponent<P>\n\nexport type LoaderMap = { [mdule: string]: () => Loader<any> }\n\nexport type LoadableGeneratedOptions = {\n  webpack?(): any\n  modules?(): LoaderMap\n}\n\nexport type LoadableBaseOptions<P = {}> = LoadableGeneratedOptions & {\n  loading?: ({\n    error,\n    isLoading,\n    pastDelay,\n  }: {\n    error?: Error | null\n    isLoading?: boolean\n    pastDelay?: boolean\n    retry?: () => void\n    timedOut?: boolean\n  }) => JSX.Element | null\n  loader?: Loader<P> | LoaderMap\n  loadableGenerated?: LoadableGeneratedOptions\n  ssr?: boolean\n}\n\nexport type LoadableOptions<P = {}> = LoadableBaseOptions<P> & {\n  render?(loader: any, props: any): JSX.Element\n}\n\nexport type DynamicOptions<P = {}> = LoadableBaseOptions<P> & {\n  /**\n   * @deprecated the modules option has been planned for removal\n   */\n  render?(props: P, loaded: any): JSX.Element\n}\n\nexport type LoadableFn<P = {}> = (\n  opts: LoadableOptions<P>\n) => React.ComponentType<P>\n\nexport type LoadableComponent<P = {}> = React.ComponentType<P>\n\nexport function noSSR<P = {}>(\n  LoadableInitializer: LoadableFn<P>,\n  loadableOptions: LoadableOptions<P>\n): React.ComponentType<P> {\n  // Removing webpack and modules means react-loadable won't try preloading\n  delete loadableOptions.webpack\n  delete loadableOptions.modules\n\n  // This check is necessary to prevent react-loadable from initializing on the server\n  if (!isServerSide) {\n    return LoadableInitializer(loadableOptions)\n  }\n\n  const Loading = loadableOptions.loading!\n  // This will only be rendered on the server side\n  return () => (\n    <Loading error={null} isLoading pastDelay={false} timedOut={false} />\n  )\n}\n\n// function dynamic<P = {}, O extends DynamicOptions>(options: O):\n\nexport default function dynamic<P = {}>(\n  dynamicOptions: DynamicOptions<P> | Loader<P>,\n  options?: DynamicOptions<P>\n): React.ComponentType<P> {\n  let loadableFn: LoadableFn<P> = Loadable\n  let loadableOptions: LoadableOptions<P> = {\n    // A loading component is not required, so we default it\n    loading: ({ error, isLoading, pastDelay }) => {\n      if (!pastDelay) return null\n      if (process.env.NODE_ENV === 'development') {\n        if (isLoading) {\n          return null\n        }\n        if (error) {\n          return (\n            <p>\n              {error.message}\n              <br />\n              {error.stack}\n            </p>\n          )\n        }\n      }\n\n      return null\n    },\n  }\n\n  // Support for direct import(), eg: dynamic(import('../hello-world'))\n  // Note that this is only kept for the edge case where someone is passing in a promise as first argument\n  // The react-loadable babel plugin will turn dynamic(import('../hello-world')) into dynamic(() => import('../hello-world'))\n  // To make sure we don't execute the import without rendering first\n  if (dynamicOptions instanceof Promise) {\n    loadableOptions.loader = () => dynamicOptions\n    // Support for having import as a function, eg: dynamic(() => import('../hello-world'))\n  } else if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions\n    // Support for having first argument being options, eg: dynamic({loader: import('../hello-world')})\n  } else if (typeof dynamicOptions === 'object') {\n    loadableOptions = { ...loadableOptions, ...dynamicOptions }\n  }\n\n  // Support for passing options, eg: dynamic(import('../hello-world'), {loading: () => <p>Loading something</p>})\n  loadableOptions = { ...loadableOptions, ...options }\n\n  if (\n    typeof dynamicOptions === 'object' &&\n    !(dynamicOptions instanceof Promise)\n  ) {\n    // show deprecation warning for `modules` key in development\n    if (process.env.NODE_ENV !== 'production') {\n      if (dynamicOptions.modules) {\n        console.warn(\n          'The modules option for next/dynamic has been deprecated. See here for more info https://err.sh/vercel/next.js/next-dynamic-modules'\n        )\n      }\n    }\n    // Support for `render` when using a mapping, eg: `dynamic({ modules: () => {return {HelloWorld: import('../hello-world')}, render(props, loaded) {} } })\n    if (dynamicOptions.render) {\n      loadableOptions.render = (loaded, props) =>\n        dynamicOptions.render!(props, loaded)\n    }\n    // Support for `modules` when using a mapping, eg: `dynamic({ modules: () => {return {HelloWorld: import('../hello-world')}, render(props, loaded) {} } })\n    if (dynamicOptions.modules) {\n      loadableFn = Loadable.Map\n      const loadModules: LoaderMap = {}\n      const modules = dynamicOptions.modules()\n      Object.keys(modules).forEach((key) => {\n        const value: any = modules[key]\n        if (typeof value.then === 'function') {\n          loadModules[key] = () => value.then((mod: any) => mod.default || mod)\n          return\n        }\n        loadModules[key] = value\n      })\n      loadableOptions.loader = loadModules\n    }\n  }\n\n  // coming from build/babel/plugins/react-loadable-plugin.js\n  if (loadableOptions.loadableGenerated) {\n    loadableOptions = {\n      ...loadableOptions,\n      ...loadableOptions.loadableGenerated,\n    }\n    delete loadableOptions.loadableGenerated\n  }\n\n  // support for disabling server side rendering, eg: dynamic(import('../hello-world'), {ssr: false})\n  if (typeof loadableOptions.ssr === 'boolean') {\n    if (!loadableOptions.ssr) {\n      delete loadableOptions.ssr\n      return noSSR(loadableFn, loadableOptions)\n    }\n    delete loadableOptions.ssr\n  }\n\n  return loadableFn(loadableOptions)\n}\n"]},"metadata":{},"sourceType":"script"}