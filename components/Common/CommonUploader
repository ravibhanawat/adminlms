// import { DownloadOutlined, UploadOutlined } from '@ant-design/icons'
// import { Button, message, Modal, Upload, UploadProps } from 'antd'

// import React, { useEffect, useMemo, useState } from 'react'

// import { findIndex, isArray, isEmpty, isObject } from 'lodash';

// import { httpClient } from '../../util/Api'
// import { Cookies } from 'react-cookie';




// // const getBase64=(file:any)=> {
// //     return new Promise((resolve, reject) => {
// //       const reader = new FileReader();
// //       reader.readAsDataURL(file);
// //       reader.onload = () => resolve(reader.result);
// //       reader.onerror = error => reject(error);
// //     });
// //   }
// function CommonUploader({ children, onChange,value,disabled=false }) {

//     console.log('value HDocumentsVendorUploader',value)

//     const [loading, setLoading] = useState(false);
//     const [fileList,setFileList] = useState([])
//     const [previewImage,setPreviewImage]=useState('')
//     const [previewVisible,setPreviewVisible] = useState(false)
//     const [previewTitle, setPreviewTitle] = useState('')
//     const cookies = new Cookies();
//     const token = cookies.get("token");
//     useEffect(()=>{
//         updateValue(value)
       
//       },[value])

//       const updateValue =(value)=> {
//  const fileLists = [];
//         !isEmpty(value) &&
//           isArray(value) &&
//           value.map((item, index) => {
//             const fileItem = !isObject(item) ? {fileUrl: item,name: item.split('/').pop()}:item;
           
//             fileLists.push({
//               status: 'done',
//               uid: item?.uid,
//               fileUrl: fileItem.fileUrl,
//               name: fileItem?.name?.slice(-8) || '',
//               thumbUrl: fileItem.fileUrl,
//             });
//             return item;
//           });

//           // console.log(value,fileLists)
// setFileList(value)
//        // setFileList([...fileLists])
        
//         }
//         const handleCancel=()=>{
//             setPreviewVisible(false)
//         }
//     const props= {
//         // maxCount: 1,
//         headers:{
//          "Authorization":"Bearer"+ " "+  token || undefined,
//          'x-timestamp': `${Date.now()}`,
//          "x-api-key":"qwertyuiop12345zxcvbnmkjh:U2FsdGVkX1/NsFV/wfHncKBib6chJ7JGhfJyt9aSv/ltg0s/P/NaMtyNM7tSiB78clryjyNDUxlNwLeS/O5AlSXoL3x+rVxpetSQJYyjoiA9miQ99RKT7VaRhJBUFDXk+DfeyvsUNpUr6jw0sMZwyANc429j3cRp+Ow7QsLp2Uq33GxJJ2MYzd1hFrg7sfDDRGHLiZaR3V2eXryzqj0GSA==",
//           "x-custom-lang":  'en-US' 

//         },
//         beforeUpload: file => {
//             const isLt2M = file?.size / 1024 / 1024 < 5;
//         if (!isLt2M) {
//           message.error('File must smaller than 5MB');
//             }
//         return isLt2M;

//         },
//         onRemove:async(file) => {
//           const r = confirm('Are you sure you want to delete this item?');
//           if (r) {
//             let arr = [];
//              if(isEmpty(file)) return;
//            await  httpClient.delete('removeFile',{files:file?.fileUrl ? file?.fileUrl : file.thumbUrl})
//            let files = fileList || [];
//            const index = findIndex(files, o => o.uid == file.uid);
//            if(index !== -1) files?.splice(index,1);
//            setFileList([...files])
//           }
//           else{
//             return false
//           }
//         },
//         onChange: info => {

//            if (info.file.status === 'uploading') {
//                 setLoading(true);
//                 return;
//             }
//             if (info.file.status === 'done') {
                 
//               let fileList = info?.fileList?.map((r)=>{return{name: r?.name.slice(-8) || '',fileUrl:r?.response?.data ?r?.response?.data : r?.fileUrl,status:r?.status,uid:r.uid,thumbUrl:r.fileUrl}})    
//                  onChange?.(fileList)
//                  setFileList(fileList)
//                 setLoading(false);
//                 return
//             }
//         },

//         onDownload:(item) => {
//             let url = item?.fileUrl ? item?.fileUrl : item?.thumbUrl;
//             if(url.indexOf("http://") == 0 || url.indexOf("https://") == 0)  url = url;
//             else url = `http://${url}`
//             window.open(url, '_blank');
//           },
//           onPreview:async file => {
//             let fileItem = !isObject(file) ?  {fileUrl: file.fileUrl, name: file.name }:file;
//             if(file.status == 'uploading') return null;
//             let ext = fileItem.fileUrl ? fileItem.fileUrl.split('.').pop() : fileItem.thumbUrl.split('.').pop();
            
//             if (!file.url && !file.thumbUrl && file.type) {
//             //   file.preview = await getBase64(file.originFileObj);
//             }
//             let previewImage = file.thumbUrl || file.url;
//             if (['jpg','png','svg','jpeg'].includes(ext)){
//                 previewImage = previewImage
//             }
//             // else if(['ai','audition','avi','bridge','css','csv','doc','dreamweaver','exe','file','fireworks',
//             // 'flash','html','illustrator','indesign','javascript','json','mp3','mp4','pdf','photoshop',
//             // 'ppt','psd','txt','xls','xml','zip'].includes(ext)){
//             //   previewImage = Images[ext]
//             // }else{
//             //     previewImage = Images['file']
//             // }
//             setPreviewImage(previewImage)
//             setPreviewVisible(true)
//             setPreviewTitle(file.name || "Image")
            
//           },
//           listType:"picture-card",
//         showUploadList: {
//             showPreviewIcon:true,
//             showDownloadIcon: true,
//             downloadIcon: <DownloadOutlined/>,
//             showRemoveIcon: true,
            
//             // removeIcon: <StarOutlined onClick={e => console.log(e, 'custom removeIcon event')} />,
//           },
//         defaultFileList:typeof value === "string" ? null : value?.map(v => ({...v, thumbUrl: !['pdf','xlsx'].includes(v?.fileUrl?.split('.')?.[v?.fileUrl?.split('.')?.length - 1]) ? v?.fileUrl :'https://hoicko.sgp1.digitaloceanspaces.com/uploads/RWlKYtltZ0MbId9P5mhD.png'}))
          
//     };

//     return (
//         <>
//             <Upload disabled={disabled}   action={`${API_HOST}fileUpload`} className='vendor_uploader'  method='POST'  showUploadList={true} {...props}>
//                 {children && React.isValidElement(children) ? children :
     
//                     <Button loading={loading} disabled={disabled} block type='text' icon={<UploadOutlined />}>
//                         Upload
//                         {/* {formatMessage({ id: "component.upload_own_file" })} */}
//                     </Button>
                   
//                     }
//             </Upload>
//              <Modal
//                 open={previewVisible}
//                 title={previewTitle}
//                 footer={null}
//                 onCancel={handleCancel}
//                 width={700}
//             >
//             {/* <img alt="example" style={{width:"100%"}} src={previewImage} /> */}
//             {
//               value && value.length>0 && <div>
//               {Array.from(value).map((file:any,index)=>(<a href={`${file['fileUrl']}`} download key={`attachment_1664952603542_${index}`}>
//                 <DownloadOutlined/>{file.name || ""}
//               </a>))}
//           </div>
//             }
//             </Modal> 
//             </>
//     )
// }

// export default React.memo(CommonUploader)